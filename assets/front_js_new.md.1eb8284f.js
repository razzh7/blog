import{_ as s,o as n,c as a,e as l}from"./app.a0565833.js";const C=JSON.parse('{"title":"new \u5B9E\u73B0","description":"","frontmatter":{},"headers":[{"level":2,"title":"this \u6307\u5411","slug":"this","link":"#this","children":[]}],"relativePath":"front/js/new.md"}'),o={name:"front/js/new.md"},p=l(`<h1 id="new-\u5B9E\u73B0" tabindex="-1">new \u5B9E\u73B0 <a class="header-anchor" href="#new-\u5B9E\u73B0" aria-hidden="true">#</a></h1><ul><li>\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u5BF9\u8C61</li><li>\u65B0\u5BF9\u8C61\u7684 <code>__proto__</code> \u4F1A\u88AB\u6302\u4E0A\u6784\u9020\u51FD\u6570\u7684 <code>prototype</code></li><li>\u4F7F\u7528 <code>call</code> \u6765\u6267\u884C <code>new</code> \u4E4B\u540E\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5C06\u5176\u6307\u5411\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u4E0A</li><li>\u8FD4\u56DE\u51FD\u6570\u6267\u884C\u7ED3\u679C\u6216\u8FD4\u56DE\u521B\u5EFA\u7684\u5BF9\u8C61</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__proto__</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">arguments</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="this" tabindex="-1">this \u6307\u5411 <a class="header-anchor" href="#this" aria-hidden="true">#</a></h2><p>\u5173\u4E8E <code>new</code> \u65F6\u5019\u7684 <code>this</code> \u6307\u5411\uFF0C\u53EF\u4EE5\u53C2\u8003\u8FD9\u7BC7 <a href="https://rzhavenir.github.io/blog/front/js/this.html#new-bind" target="_blank" rel="noreferrer">this \u6307\u5411\u603B\u7ED3</a>\u3002</p>`,5),e=[p];function t(r,c,F,y,D,i){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
